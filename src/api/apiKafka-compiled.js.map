{"version":3,"sources":["apiKafka.js"],"names":[],"mappings":"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","file":"apiKafka-compiled.js","sourcesContent":["/**\n * Created by jerry on 2017/4/13.\n */\nimport axios from 'axios'\nimport qs from 'querystring'\n\nlet baseKafka = 'http://115.29.45.208:10000/data2kafka';\n\n// 创建实例时设置配置的默认值\nvar instanceKafka = axios.create({\n    baseURL: baseKafka\n});\nvar AUTH_TOKEN_Kafka = localStorage.getItem('access-user');\n// 在实例已创建后修改默认值\ninstanceKafka.defaults.headers.common['Authorization'] = AUTH_TOKEN_Kafka;\n\n//微博用户信息\nexport const reqWeiboUser = params => {\n    return instanceKafka.get('/weiboUser/findByNameOrderBySelect', {params: params})\n}\n\nexport const reqGetKeywordList = params => {\n    return instanceKafka.get('/keywords/', {})\n}\nexport const reqGetKeywordQueryList = params => {\n    return instanceKafka.get('/keywords/query', {params: params})\n}\nexport const reqAddKeyword = params => {\n    return instanceKafka.post('/keywords/', params)\n}\nexport const reqDeleteKeyword = params => {\n    return instanceKafka.delete('/keywords/' + params.id)\n}\nexport const reqBatchDeleteKeyword = params => {\n    return instanceKafka.delete('/keywords/', qs.stringify(params))\n}\nexport const reqEditKeyword = params => {\n    return instanceKafka.put('/keywords/' + params.id, params)\n}\n//账户\nexport const reqGetAccountList = params => {\n    return instanceKafka.get('/logininfo/', {})\n}\nexport const reqGetAccountQueryList = params => {\n    return instanceKafka.get('/logininfo/query', {params: params})\n}\nexport const reqAddAccount = params => {\n    return instanceKafka.post('/logininfo/', params)\n}\nexport const reqDeleteAccount = params => {\n    return instanceKafka.delete('/logininfo/' + params.id)\n}\nexport const reqBatchDeleteAccount = params => {\n    return instanceKafka.delete('/logininfo/', params)\n}\nexport const reqEditAccount = params => {\n    return instanceKafka.put('/logininfo/' + params.id, params)\n}\n//日志\nexport const reqGetLogList = params => {\n    return instanceKafka.get('/saveLog/findByTypeOrderByLongCreateTime.json', {params: params})\n}\nexport const reqGetIdLogList = params => {\n    return instanceKafka.get('/saveLog/findByTypeOrderById.json', {params: params})\n}\nexport const reqFindTypeList = params => {\n    return instanceKafka.get('/saveLog/findLastSpiderLog/'+ params.type)\n}\nexport const reqDeleteLog = params => {\n    return instanceKafka.delete('/saveLog/' + params.id)\n}\nexport const reqBatchDeleteLog = params => {\n    return instanceKafka.delete('/admin/weibo/log', params)\n}\nexport const reqEditLog = params => {\n    return instanceKafka.put('/saveLog/' + params.id, params)\n}\n\n//种子采集\n//新增\nexport const reqSeedsAdd = params => {\n    return instanceKafka.post('/weiboSeeds/', params)\n}\n//删除\nexport const reqSeedsDelete = params => {\n    return instanceKafka.delete('/admin/role/' + params)\n}\n//编辑\nexport const reqSeedsEdit = params => {\n    return instanceKafka.put('/weiboSeeds/' + params.id, params)\n}\n//查取\nexport const reqSeedsSearch = params => {\n    return instanceKafka.get('/weiboSeeds/query', {params: params})\n}\n"]}